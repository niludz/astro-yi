---
import { formatDate } from "../utils/formatDate";
import { dealLabel } from "../utils/dealLabel";
import { t } from "../i18n/utils";
const {
  title,
  date,
  category,
  tags,
  lastModified = "",
  readingTime = {},
} = Astro.props;
---

<div class="border-b-1">
  <!-- title -->
  <div class="flex items-center">
    <div class="flex text-xl font-bold">
      {title}
    </div>
  </div>

  <div class="flex flex-wrap items-center my-2 space-x-2">
    <!-- date -->
    {
      date && (
        <>
          <i class="ri-calendar-2-fill" />
          <div class="tag">{formatDate(date)}</div>
        </>
      )
    }

    <!-- category -->
    {
      category &&
        dealLabel(category).map((categoryName) => (
          <>
            <div class="divider-vertical" />
            <i class="ri-folder-3-line" />
            <a
              href={"/category/" + categoryName}
              class="text-wrap break-all  hover:text-skin-active cursor-pointer"
            >
              {categoryName}
            </a>
          </>
        ))
    }

    <!-- tag -->
    {
      tags &&
        dealLabel(tags).map((tagName) => (
          <>
            <div class="divider-vertical" />
            <i class="ri-price-tag-3-line" />
            <a
              href={"/tags/" + tagName}
              class="text-wrap break-all hover:text-skin-active cursor-pointer"
            >
              {tagName}
            </a>
          </>
        ))
    }

    <!-- update -->
    <!-- {
      lastModified && (
        <div class="divider-vertical"/>
        <i class="ri-calendar-check-fill"></i>
        <div class="tag">{t('post.lastUpdated')}ï¼š{lastModified}</div>
      )
    } -->

    <!-- minutes -->
    {
      readingTime.minutes && (
        <>
          <div class="divider-vertical" />
          <i class="ri-hourglass-fill" />
          <div class="tag">
            {Math.ceil(readingTime.minutes)}
            {t("title.minutes")}
          </div>
          <div class="divider-vertical" />
          <div class="tag">
            {readingTime.words}
            {t("title.words")}
          </div>
        </>
      )
    }
  </div>
</div>
